{
    "version": "5.0.beta.9.1",
    "collection": [
        {
            "class_name": "Test",
            "id": 7,
            "name": "_createUser",
            "accessibility": 0,
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "library(digest)\n\nformatFields = function(login, password, userBankEncryption, enabled, extraFields) {\n  fields = list(\n    login=login,\n    password=password,\n    enabled=enabled\n  )\n  if(userBankEncryption != \"plain\") {\n    fields$password = digest(password, userBankEncryption, serialize=F)\n  }\n  if(is.list(extraFields)) {\n    for(name in ls(extraFields)) {\n      fields[[name]] = extraFields[[name]]\n    }\n  }\n  return(fields)\n}\n\ncheckLoginExist = function(login, tableMap) {\n  sql = \"\nSELECT * FROM {{table}} \nWHERE {{loginColumn}}='{{login}}'\n\"\n  user = concerto.table.query(sql, params=list(\n    table=tableMap$table,\n    loginColumn=tableMap$columns$login,\n    login=login\n  ))\n\n  return(dim(user)[1]>0)\n}\n\ngetMappedColumns = function(fieldNames, tableMap) {\n  cols = c()\n  for(i in 1:length(fieldNames)) {\n    col = tableMap$columns[[fieldNames[i]]]\n    if(!is.null(col)) {\n      cols=c(cols,col)\n      next\n    }\n    cols=c(cols,fieldNames[i])\n  }\n  return(cols)\n}\n\ninsertUser = function(fields, tableMap) {\n  sql = paste0(\n    \"INSERT INTO {{table}} (\",\n    paste(getMappedColumns(ls(fields), tableMap), collapse=\",\"),\n    \") VALUES (\",\n    paste0(\"'{{\",ls(fields),\"}}'\", collapse=\",\"),\n    \")\"\n  )\n  concerto.table.query(sql, params=append(fields, list(\n    table=tableMap$table\n  )))\n  userId = concerto.table.lastInsertId()\n  concerto.log(userId, title=\"new user id\")\n\n  sql=\"SELECT * FROM {{table}} WHERE {{idColumn}}={{id}}\"\n  user=concerto.table.query(sql,params=list(\n    table=tableMap$table,\n    idColumn=tableMap$columns$id,\n    id=userId\n  ))\n  concerto.log(user, title=\"inserted user\")\n  return(user)\n}\n\nuser=NULL\nif(is.na(password)) { password = \"\" }\ntableMap = fromJSON(userBankTable)\nfields = formatFields(login, password, userBankEncryption, enabled, extraFields)\nif(checkLoginExist(login, tableMap)) {\n  concerto.log(login, title=\"login already exist\")\n  .branch = \"loginAlreadyExist\"\n} else {\n  concerto.log(login, title=\"login doesn't exist and can be created\")\n  user=insertUser(fields, tableMap)\n  .branch = \"created\"\n}",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 33,
                    "name": "created",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 34,
                    "name": "userBankTable",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 35,
                    "name": "login",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 36,
                    "name": "password",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 37,
                    "name": "enabled",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "1",
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 38,
                    "name": "loginAlreadyExist",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 39,
                    "name": ".branch",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 40,
                    "name": "user",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 41,
                    "name": "userBankEncryption",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 42,
                    "name": "extraFields",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2019-02-13 12:18:21",
            "updatedBy": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "hash": "e4044e39bfbba52359a75c7eaf01960b004d1b3e"
        }
    ]
}