{
    "version": "5.0.beta.9.1",
    "collection": [
        {
            "class_name": "Test",
            "id": 25,
            "name": "_CATInitialization",
            "accessibility": 0,
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "getItems = function(itemBankType, itemBankItems, itemBankTable){\n  items = NULL\n  if(itemBankType == \"table\") {\n    tableMap = fromJSON(itemBankTable)\n    table = tableMap$table\n    questionColumn = tableMap$columns$question\n    responseOptionsColumn = tableMap$columns$responseOptions\n    aColumn = tableMap$columns$a\n    bColumn = tableMap$columns$b\n    cColumn = tableMap$columns$c\n    dColumn = tableMap$columns$d\n    correctColumn = tableMap$columns$correct\n    cbGroupColumn = tableMap$columns$cbGroup\n    fixedIndexColumn = tableMap$columns$fixedIndex\n    items = concerto.table.query(\n      \"\nSELECT \nid, \n{{questionColumn}} AS question, \n{{responseOptionsColumn}} AS responseOptions,\n{{aColumn}} AS a,\n{{bColumn}} AS b,\n{{cColumn}} AS c,\n{{dColumn}} AS d,\n{{correctColumn}} AS correct,\n{{cbGroupColumn}} AS cbGroup,\n{{fixedIndexColumn}} AS fixedIndex\nFROM {{table}}\n\", \n      list(\n        questionColumn=questionColumn,\n        responseOptionsColumn=responseOptionsColumn,\n        aColumn=aColumn,\n        bColumn=bColumn,\n        cColumn=cColumn,\n        dColumn=dColumn,\n        correctColumn=correctColumn,\n        cbGroupColumn=cbGroupColumn,\n        fixedIndexColumn=fixedIndexColumn,\n        table=table\n      ))\n  }\n  if(itemBankType == \"direct\") {\n    itemBankItems = fromJSON(itemBankItems)\n    if(length(itemBankItems) > 0) {\n      for(i in 1:length(itemBankItems)) {\n        itemBankItems[[i]]$responseOptions = as.character(toJSON(itemBankItems[[i]]$responseOptions)) #response options don't fit into flat table, so turn them back to JSON.\n        items = rbind(items, data.frame(itemBankItems[[i]], stringsAsFactors=F))\n      }\n    }\n  } \n  \n  if(dim(items)[1] == 0) { stop(\"Item bank must not be empty!\") }\n  return(items)\n}\n\nitems = getItems(settings$itemBankType, settings$itemBankItems, settings$itemBankTable)\nitemsNum = dim(items)[1]\n\ncbGroup = NULL\ncbControl = NULL\ncbProps = fromJSON(settings$contentBalancing)\nif(length(cbProps) > 0) {\n  cbGroup = as.character(items[,\"cbGroup\"])\n  cbControl = list(\n    names=as.character(cbProps[,\"name\"]),\n    props=as.numeric(cbProps[,\"proportion\"])\n  )\n}\n\nparamBank = items[,c(\"a\",\"b\",\"c\",\"d\"),drop=F]\nparamBank = apply(paramBank, 2, as.numeric)\n\ntheta = as.numeric(settings$startingTheta)\nitemsAdministered = NULL\ncorrectness = NULL\ntestTimeStarted = as.numeric(Sys.time())\ntestTimeLeft = as.numeric(settings$testTimeLimit) + as.numeric(settings$testTimeLimitOffset)",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 173,
                    "name": "out",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 176,
                    "name": "items",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 192,
                    "name": "cbGroup",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 193,
                    "name": "cbControl",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 194,
                    "name": "paramBank",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 195,
                    "name": "theta",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 197,
                    "name": "itemsAdministered",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 198,
                    "name": "correctness",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 200,
                    "name": "testTimeStarted",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 296,
                    "name": "testTimeLeft",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 607,
                    "name": "settings",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 25,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2019-02-01 08:45:48",
            "updatedBy": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": null,
            "groups": "",
            "starterContent": true,
            "hash": "fee26ed3fd292f28b615302556fbbfe437ae95c3"
        }
    ]
}