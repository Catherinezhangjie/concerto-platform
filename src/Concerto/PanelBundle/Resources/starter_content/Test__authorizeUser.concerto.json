{
    "version": "5.0.beta.9.1",
    "collection": [
        {
            "class_name": "Test",
            "id": 5,
            "name": "_authorizeUser",
            "accessibility": 0,
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "library(digest)\n\nresultCode = 0\ngetUserByLogin = function(login) {\n  if(userBankType == \"direct\") {\n    userList = fromJSON(userBankList)\n    if(length(userList) == 0) {\n      resultCode <<- 1\n      return(NULL)\n    }\n\n    for(i in 1:length(userList)) {\n      user = userList[[i]]\n      if(user$login == login && user$enabled == 1) {\n        return(user)\n      }\n    }\n    resultCode <<- 1\n    return(NULL)\n  } else {\n    tableMap = fromJSON(userBankTable)\n    sql = \"\nSELECT * \nFROM {{table}} \nWHERE \n{{loginColumn}}='{{login}}'\nAND {{enabledColumn}}=1\n\"\n    user = concerto.table.query(sql, params=list(\n      table=tableMap$table,\n      loginColumn=tableMap$columns$login,\n      enabledColumn=tableMap$columns$enabled,\n      login=login\n    ))\n    if(dim(user)[1] == 0) {\n      resultCode <<- 1\n      return(NULL)\n    }\n    return(user[1,])\n  }\n}\n\ncheckPassword = function(rawPassword, encryptedPassword, encryption) {\n  if(is.na(encryptedPassword) || encryptedPassword == \"\") { return(T) }\n  if(is.na(rawPassword)) { return(F) }\n  if(encryption==\"plain\") {\n    return(rawPassword == encryptedPassword)\n  }\n  return(digest(rawPassword, encryption, serialize=F) == encryptedPassword)\n}\n\nauthorizeUser = function(login, password) {\n  user = getUserByLogin(login)\n  concerto.log(login, \"login checked\")\n  concerto.log(password, \"password checked\")\n  concerto.log(user, \"user checked for password\")\n  \n  if(!is.null(user) && checkPassword(password, user$password, userBankEncryption)) {\n    return(user)\n  }\n  resultCode <<- 1\n  return(NULL)\n}\n\nuser = authorizeUser(login, password)\nif(is.null(user)) {\n  concerto.log(paste0(\"user \",login,\" unauthorized\"), title=\"authorization result\")\n  .branch = \"unauthorized\"\n} else {\n  concerto.log(paste0(\"user \",login,\" authorized\"), title=\"authorization result\")\n  .branch = \"authorized\"\n}",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 13,
                    "name": "authorized",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 14,
                    "name": "login",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 15,
                    "name": "password",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 16,
                    "name": "unauthorized",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 17,
                    "name": "user",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 18,
                    "name": ".branch",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 19,
                    "name": "userBankType",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 20,
                    "name": "userBankList",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 21,
                    "name": "userBankTable",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 22,
                    "name": "userBankEncryption",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 403,
                    "name": "resultCode",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2019-02-13 12:19:05",
            "updatedBy": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "hash": "496767982fb516cb8efcef7d26818096a3827692"
        }
    ]
}