{
    "version": "5.0.beta.9.1",
    "collection": [
        {
            "class_name": "Test",
            "id": 63,
            "name": "_form",
            "accessibility": 0,
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "getTemplateParams = function(templateParams, fields, initialValues) {\n  if(!is.list(templateParams)) {\n    templateParams = list()\n  }\n  for(name in .dynamicInputs) {\n    templateParams[[name]] = get(name)\n  }\n  templateParams$fields = fields\n  templateParams$initialValues = initialValues\n  return(templateParams)\n}\n\nresponse = concerto5:::concerto.template.show(\n  template,\n  params=getTemplateParams(templateParams, fields, initialValues)\n)\n\nfor(.name in .dynamicReturns) {\n  assign(.name, response[[.name]])\n}\nif(\".branch\" %in% .dynamicReturns) {\n  .branch = response$buttonPressed\n  if(!(.branch %in% .dynamicBranches)) { .branch = \"out\" }\n}",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 617,
                    "name": "out",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 63,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 618,
                    "name": "fields",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 63,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 619,
                    "name": "templateParams",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 63,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 620,
                    "name": "response",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 63,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 621,
                    "name": "template",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 63,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 623,
                    "name": "initialValues",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "{}",
                    "test": 63,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2019-02-11 14:01:46",
            "updatedBy": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": null,
            "groups": "",
            "starterContent": true,
            "hash": "f6e1c0d5d14c8015624999bff17f98e30d884684"
        },
        {
            "class_name": "TestWizard",
            "id": 13,
            "name": "form",
            "description": "",
            "accessibility": 0,
            "archived": "0",
            "steps": [
                {
                    "class_name": "TestWizardStep",
                    "id": 25,
                    "title": "Form",
                    "description": "",
                    "orderNum": 0,
                    "colsNum": 0,
                    "wizard": 13,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 73,
                            "label": "Template",
                            "description": "Layout template to use for form.",
                            "hideCondition": "",
                            "type": 5,
                            "passableThroughUrl": "0",
                            "value": "form",
                            "testVariable": 621,
                            "name": "template",
                            "wizardStep": 25,
                            "stepTitle": "Form",
                            "order": 0,
                            "wizard": 13,
                            "definition": {
                                "placeholder": 0,
                                "defvalue": "form"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 74,
                            "label": "Fields",
                            "description": "List of fields for form.",
                            "hideCondition": "",
                            "type": 10,
                            "passableThroughUrl": "0",
                            "value": "[]",
                            "testVariable": 618,
                            "name": "fields",
                            "wizardStep": 25,
                            "stepTitle": "Form",
                            "order": 0,
                            "wizard": 13,
                            "definition": {
                                "element": {
                                    "type": 9,
                                    "definition": {
                                        "placeholder": 0,
                                        "fields": [
                                            {
                                                "type": 0,
                                                "name": "name",
                                                "label": "Name",
                                                "definition": {
                                                    "placeholder": 0
                                                }
                                            },
                                            {
                                                "type": 0,
                                                "name": "label",
                                                "label": "Label",
                                                "definition": {
                                                    "placeholder": 0
                                                }
                                            },
                                            {
                                                "type": 3,
                                                "name": "type",
                                                "label": "Type",
                                                "definition": {
                                                    "placeholder": 0,
                                                    "options": [
                                                        {
                                                            "value": "singleLine",
                                                            "label": "Single line text",
                                                            "order": 0
                                                        },
                                                        {
                                                            "value": "multiLine",
                                                            "label": "Multi line text",
                                                            "order": 2
                                                        },
                                                        {
                                                            "value": "checkbox",
                                                            "label": "Checkbox",
                                                            "order": 3
                                                        },
                                                        {
                                                            "value": "password",
                                                            "label": "Password",
                                                            "order": 1
                                                        }
                                                    ],
                                                    "defvalue": "singleLine"
                                                }
                                            },
                                            {
                                                "type": 10,
                                                "name": "validation",
                                                "label": "Validation",
                                                "definition": {
                                                    "placeholder": 0,
                                                    "element": {
                                                        "type": 9,
                                                        "definition": {
                                                            "placeholder": 0,
                                                            "fields": [
                                                                {
                                                                    "type": 3,
                                                                    "name": "type",
                                                                    "label": "Type",
                                                                    "definition": {
                                                                        "placeholder": 0,
                                                                        "options": [
                                                                            {
                                                                                "value": "required",
                                                                                "label": "Required"
                                                                            },
                                                                            {
                                                                                "value": "minlength",
                                                                                "label": "Min length"
                                                                            },
                                                                            {
                                                                                "value": "maxlength",
                                                                                "label": "Max length"
                                                                            },
                                                                            {
                                                                                "value": "min",
                                                                                "label": "Min"
                                                                            },
                                                                            {
                                                                                "value": "max",
                                                                                "label": "Max"
                                                                            },
                                                                            {
                                                                                "value": "pattern",
                                                                                "label": "Pattern"
                                                                            }
                                                                        ],
                                                                        "defvalue": "required"
                                                                    },
                                                                    "hideCondition": ""
                                                                },
                                                                {
                                                                    "type": 0,
                                                                    "name": "value",
                                                                    "label": "Value",
                                                                    "definition": {
                                                                        "placeholder": 0
                                                                    },
                                                                    "hideCondition": "parent.type != \"minlength\" && parent.type != \"maxlength\" && parent.type != \"min\" && parent.type != \"max\" && parent.type != \"pattern\""
                                                                },
                                                                {
                                                                    "type": 0,
                                                                    "name": "alert",
                                                                    "label": "Alert",
                                                                    "definition": {
                                                                        "placeholder": 0,
                                                                        "defvalue": "Invalid value!"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "test": 63,
            "testName": "_form",
            "updatedOn": "2019-02-01 11:04:49",
            "updatedBy": "admin",
            "owner": null,
            "groups": "",
            "starterContent": true,
            "hash": "ae9f046fe18e16d49b5dc6f9735fd8de31381451"
        },
        {
            "class_name": "ViewTemplate",
            "id": 20,
            "name": "form",
            "description": "",
            "accessibility": 0,
            "archived": "0",
            "head": "",
            "css": "",
            "js": "testRunner.controllerProvider.register(\"form\", function($scope) {\n  $scope.fields = angular.fromJson(testRunner.R.fields);\n  $scope.values = angular.fromJson(testRunner.R.initialValues);\n  if(typeof $scope.values === 'undefined' || $scope.values === null) $scope.values = {};\n\n  $scope.getValidator = function(field, type) {\n    for(var i=0; i<field.validation.length; i++) {\n      var validation = field.validation[i];\n      if(validation.type === type) {\n        return validation;\n      }\n    }\n    return null;\n  };\n\n  function initializeValues() {\n    for(var i=0; i<$scope.fields.length; i++) {\n      var field = $scope.fields[i];\n      \n      switch(field.type) {\n        case \"checkbox\": {\n          if(typeof $scope.values[field.name] === 'undefined') { $scope.values[field.name] = 0; }\n          testRunner.addExtraControl(field.name, function() {\n            return $scope.values[field.name];\n          });\n          break;\n        }\n        default: {\n          if(typeof $scope.values[field.name] === 'undefined') { $scope.values[field.name] = \"\"; }\n        }\n      }\n    }\n  }\n\n  initializeValues();\n});",
            "html": "<form name=\"form\" ng-controller=\"form\">\n  <div ng-repeat=\"field in fields track by $index\">\n    <div class=\"form-label\">[[field.label]]<\/div>\n\n    <div class=\"form-field\" ng-switch=\"field.type\">\n      <div ng-switch-when=\"singleLine\">\n        <input name=\"[[field.name]]\" ng-max=\"getValidator(field, 'max').value\" ng-maxlength=\"getValidator(field, 'maxlength').value\" ng-min=\"getValidator(field, 'min').value\" ng-minlength=\"getValidator(field, 'minlength').value\" ng-model=\"values[field.name]\" ng-pattern=\"getValidator(field, 'pattern').value\" ng-required=\"getValidator(field, 'required')\" type=\"text\" \/>\n      <\/div>\n      \n      <div ng-switch-when=\"password\">\n        <input name=\"[[field.name]]\" ng-max=\"getValidator(field, 'max').value\" ng-maxlength=\"getValidator(field, 'maxlength').value\" ng-min=\"getValidator(field, 'min').value\" ng-minlength=\"getValidator(field, 'minlength').value\" ng-model=\"values[field.name]\" ng-pattern=\"getValidator(field, 'pattern').value\" ng-required=\"getValidator(field, 'required')\" type=\"password\" \/>\n      <\/div>\n\n      <div ng-switch-when=\"multiLine\"><textarea name=\"[[field.name]]\" ng-max=\"getValidator(field, 'max').value\" ng-maxlength=\"getValidator(field, 'maxlength').value\" ng-min=\"getValidator(field, 'min').value\" ng-minlength=\"getValidator(field, 'minlength').value\" ng-model=\"values[field.name]\" ng-pattern=\"getValidator(field, 'pattern').value\" ng-required=\"getValidator(field, 'required')\"><\/textarea><\/div>\n\n      <div ng-switch-when=\"checkbox\"><input name=\"[[field.name]]\" ng-false-value=\"'0'\" ng-model=\"values[field.name]\" ng-required=\"getValidator(field, 'required')\" ng-true-value=\"'1'\" type=\"checkbox\" \/><\/div>\n    <\/div>\n\n    <div class=\"form-error\" ng-repeat=\"error in field.validation\" ng-show=\"form[field.name].$error[error.type] &amp;&amp; form[field.name].$dirty\">[[error.alert]]<\/div>\n  <\/div>\n  <button name=\"submit\" ng-disabled=\"!form.$valid\">submit<\/button><\/form>\n",
            "updatedOn": "2019-02-11 13:54:42",
            "updatedBy": "admin",
            "owner": null,
            "groups": "",
            "starterContent": true,
            "hash": "e061bd6f611594700d47b73539b579d7330e2c06"
        }
    ]
}