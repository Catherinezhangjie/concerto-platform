{
    "version": "5.0.beta.9.1",
    "collection": [
        {
            "class_name": "Test",
            "id": 5,
            "name": "_authorizeUser",
            "accessibility": 0,
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "library(digest)\n\nresultCode = 0\ngetUserByLogin = function(login) {\n  if(userBankType == \"direct\") {\n    userList = fromJSON(userBankList)\n    if(length(userList) == 0) {\n      resultCode <<- 1\n      return(NULL)\n    }\n\n    for(i in 1:length(userList)) {\n      user = userList[[i]]\n      if(user$login == login && user$enabled == 1) {\n        return(user)\n      }\n    }\n    resultCode <<- 1\n    return(NULL)\n  } else {\n    tableMap = fromJSON(userBankTable)\n    sql = \"\nSELECT * \nFROM {{table}} \nWHERE \n{{loginColumn}}='{{login}}'\nAND {{enabledColumn}}=1\n\"\n    user = concerto.table.query(sql, params=list(\n      table=tableMap$table,\n      loginColumn=tableMap$columns$login,\n      enabledColumn=tableMap$columns$enabled,\n      login=login\n    ))\n    if(dim(user)[1] == 0) {\n      resultCode <<- 1\n      return(NULL)\n    }\n    return(user[1,])\n  }\n}\n\ncheckPassword = function(rawPassword, encryptedPassword, encryption) {\n  if(is.na(encryptedPassword) || encryptedPassword == \"\") { return(T) }\n  if(is.na(rawPassword)) { return(F) }\n  if(encryption==\"plain\") {\n    return(rawPassword == encryptedPassword)\n  }\n  return(digest(rawPassword, encryption, serialize=F) == encryptedPassword)\n}\n\nauthorizeUser = function(login, password) {\n  user = getUserByLogin(login)\n  concerto.log(login, \"login checked\")\n  concerto.log(password, \"password checked\")\n  concerto.log(user, \"user checked for password\")\n  \n  if(!is.null(user) && checkPassword(password, user$password, userBankEncryption)) {\n    return(user)\n  }\n  resultCode <<- 1\n  return(NULL)\n}\n\nuser = authorizeUser(login, password)\nif(is.null(user)) {\n  concerto.log(paste0(\"user \",login,\" unauthorized\"), title=\"authorization result\")\n  .branch = \"unauthorized\"\n} else {\n  concerto.log(paste0(\"user \",login,\" authorized\"), title=\"authorization result\")\n  .branch = \"authorized\"\n}",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 13,
                    "name": "authorized",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 14,
                    "name": "login",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 15,
                    "name": "password",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 16,
                    "name": "unauthorized",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 17,
                    "name": "user",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 18,
                    "name": ".branch",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 19,
                    "name": "userBankType",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 20,
                    "name": "userBankList",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 21,
                    "name": "userBankTable",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 22,
                    "name": "userBankEncryption",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 403,
                    "name": "resultCode",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2019-02-13 12:19:05",
            "updatedBy": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "hash": "496767982fb516cb8efcef7d26818096a3827692"
        },
        {
            "class_name": "TestWizard",
            "id": 3,
            "name": "authorizeUser",
            "description": "",
            "accessibility": 0,
            "archived": "0",
            "steps": [
                {
                    "class_name": "TestWizardStep",
                    "id": 3,
                    "title": "User Bank",
                    "description": "User bank settings",
                    "orderNum": 0,
                    "colsNum": 0,
                    "wizard": 3,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 4,
                            "label": "Type",
                            "description": "Type of user bank. Possible options:\n<ul>\n\t<li><b>Direct<\/b>&nbsp;- user bank is declared at node level<\/li>\n\t<li><strong>Table<\/strong> - user bank is taken from data table<\/li>\n<\/ul>\n",
                            "hideCondition": "",
                            "type": 3,
                            "passableThroughUrl": "0",
                            "value": "direct",
                            "testVariable": 19,
                            "name": "userBankType",
                            "wizardStep": 3,
                            "stepTitle": "User Bank",
                            "order": 0,
                            "wizard": 3,
                            "definition": {
                                "placeholder": 0,
                                "options": [
                                    {
                                        "value": "direct",
                                        "label": "Direct"
                                    },
                                    {
                                        "value": "table",
                                        "label": "Table"
                                    }
                                ],
                                "defvalue": "direct"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 5,
                            "label": "User list",
                            "description": "Direct user list to use for authorization",
                            "hideCondition": "values.userBankType != \"direct\"",
                            "type": 10,
                            "passableThroughUrl": "0",
                            "value": "[]",
                            "testVariable": 20,
                            "name": "userBankList",
                            "wizardStep": 3,
                            "stepTitle": "User Bank",
                            "order": 1,
                            "wizard": 3,
                            "definition": {
                                "element": {
                                    "type": 9,
                                    "definition": {
                                        "placeholder": 0,
                                        "fields": [
                                            {
                                                "type": 0,
                                                "name": "id",
                                                "label": "Id",
                                                "definition": {
                                                    "placeholder": 0
                                                }
                                            },
                                            {
                                                "type": 0,
                                                "name": "login",
                                                "label": "Login",
                                                "definition": {
                                                    "placeholder": 0
                                                }
                                            },
                                            {
                                                "type": 0,
                                                "name": "password",
                                                "label": "Password",
                                                "definition": {
                                                    "placeholder": 0
                                                }
                                            },
                                            {
                                                "type": 4,
                                                "name": "enabled",
                                                "label": "Enabled",
                                                "definition": {
                                                    "placeholder": 0,
                                                    "defvalue": "1"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 6,
                            "label": "Password encryption",
                            "description": "<p>Hashing used for user&#39;s passwords. One of the following:<\/p>\n\n<ul>\n\t<li><strong>md5<\/strong><\/li>\n\t<li><strong>sha1<\/strong><\/li>\n\t<li><strong>crc32<\/strong><\/li>\n\t<li><strong>sha256<\/strong><\/li>\n\t<li><strong>sha512<\/strong><\/li>\n\t<li><strong>xxhash32<\/strong><\/li>\n\t<li><strong>xxhash64<\/strong><\/li>\n\t<li><strong>murmur32<\/strong><\/li>\n\t<li><strong>plain<\/strong><\/li>\n<\/ul>\n",
                            "hideCondition": "",
                            "type": 3,
                            "passableThroughUrl": "0",
                            "value": "plain",
                            "testVariable": 22,
                            "name": "userBankEncryption",
                            "wizardStep": 3,
                            "stepTitle": "User Bank",
                            "order": 0,
                            "wizard": 3,
                            "definition": {
                                "placeholder": 0,
                                "options": [
                                    {
                                        "value": "md5",
                                        "label": "md5",
                                        "order": 1
                                    },
                                    {
                                        "value": "sha1",
                                        "label": "sha1",
                                        "order": 2
                                    },
                                    {
                                        "value": "crc32",
                                        "label": "crc32",
                                        "order": 3
                                    },
                                    {
                                        "value": "sha256",
                                        "label": "sha256",
                                        "order": 4
                                    },
                                    {
                                        "value": "sha512",
                                        "label": "sha512",
                                        "order": 5
                                    },
                                    {
                                        "value": "xxhash32",
                                        "label": "xxhash32",
                                        "order": 6
                                    },
                                    {
                                        "value": "xxhash64",
                                        "label": "xxhash64",
                                        "order": 7
                                    },
                                    {
                                        "value": "murmur32",
                                        "label": "murmur32",
                                        "order": 8
                                    },
                                    {
                                        "value": "plain",
                                        "label": "plain",
                                        "order": 0
                                    }
                                ],
                                "defvalue": "plain"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 7,
                            "label": "User table",
                            "description": "Column mapping for data table used as a user bank",
                            "hideCondition": "values.userBankType != \"table\"",
                            "type": 12,
                            "passableThroughUrl": "0",
                            "value": "[]",
                            "testVariable": 21,
                            "name": "userBankTable",
                            "wizardStep": 3,
                            "stepTitle": "User Bank",
                            "order": 1,
                            "wizard": 3,
                            "definition": {
                                "placeholder": 0,
                                "cols": [
                                    {
                                        "name": "id",
                                        "label": "Id",
                                        "tooltip": ""
                                    },
                                    {
                                        "name": "login",
                                        "label": "Login",
                                        "tooltip": ""
                                    },
                                    {
                                        "name": "password",
                                        "label": "Password",
                                        "tooltip": ""
                                    },
                                    {
                                        "name": "enabled",
                                        "label": "Enabled",
                                        "tooltip": ""
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "test": 5,
            "testName": "_authorizeUser",
            "updatedOn": "2018-08-01 16:02:03",
            "updatedBy": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "hash": "a29b275087ce300fa5959af413b8a2b5bb059da6"
        },
        {
            "class_name": "Test",
            "id": 6,
            "name": "authorizeUser",
            "accessibility": 0,
            "archived": "0",
            "visibility": 2,
            "type": 1,
            "code": "library(digest)\n\nresultCode = 0\ngetUserByLogin = function(login) {\n  if(userBankType == \"direct\") {\n    userList = fromJSON(userBankList)\n    if(length(userList) == 0) {\n      resultCode <<- 1\n      return(NULL)\n    }\n\n    for(i in 1:length(userList)) {\n      user = userList[[i]]\n      if(user$login == login && user$enabled == 1) {\n        return(user)\n      }\n    }\n    resultCode <<- 1\n    return(NULL)\n  } else {\n    tableMap = fromJSON(userBankTable)\n    sql = \"\nSELECT * \nFROM {{table}} \nWHERE \n{{loginColumn}}='{{login}}'\nAND {{enabledColumn}}=1\n\"\n    user = concerto.table.query(sql, params=list(\n      table=tableMap$table,\n      loginColumn=tableMap$columns$login,\n      enabledColumn=tableMap$columns$enabled,\n      login=login\n    ))\n    if(dim(user)[1] == 0) {\n      resultCode <<- 1\n      return(NULL)\n    }\n    return(user[1,])\n  }\n}\n\ncheckPassword = function(rawPassword, encryptedPassword, encryption) {\n  if(is.na(encryptedPassword) || encryptedPassword == \"\") { return(T) }\n  if(is.na(rawPassword)) { return(F) }\n  if(encryption==\"plain\") {\n    return(rawPassword == encryptedPassword)\n  }\n  return(digest(rawPassword, encryption, serialize=F) == encryptedPassword)\n}\n\nauthorizeUser = function(login, password) {\n  user = getUserByLogin(login)\n  concerto.log(login, \"login checked\")\n  concerto.log(password, \"password checked\")\n  concerto.log(user, \"user checked for password\")\n  \n  if(!is.null(user) && checkPassword(password, user$password, userBankEncryption)) {\n    return(user)\n  }\n  resultCode <<- 1\n  return(NULL)\n}\n\nuser = authorizeUser(login, password)\nif(is.null(user)) {\n  concerto.log(paste0(\"user \",login,\" unauthorized\"), title=\"authorization result\")\n  .branch = \"unauthorized\"\n} else {\n  concerto.log(paste0(\"user \",login,\" authorized\"), title=\"authorization result\")\n  .branch = \"authorized\"\n}",
            "outdated": "0",
            "description": "User authorization.",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 23,
                    "name": "authorized",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 6,
                    "parentVariable": 13
                },
                {
                    "class_name": "TestVariable",
                    "id": 24,
                    "name": "login",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 14
                },
                {
                    "class_name": "TestVariable",
                    "id": 25,
                    "name": "password",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 15
                },
                {
                    "class_name": "TestVariable",
                    "id": 26,
                    "name": "unauthorized",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 16
                },
                {
                    "class_name": "TestVariable",
                    "id": 27,
                    "name": "user",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 17
                },
                {
                    "class_name": "TestVariable",
                    "id": 28,
                    "name": ".branch",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 18
                },
                {
                    "class_name": "TestVariable",
                    "id": 29,
                    "name": "userBankType",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "direct",
                    "test": 6,
                    "parentVariable": 19
                },
                {
                    "class_name": "TestVariable",
                    "id": 30,
                    "name": "userBankList",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "[]",
                    "test": 6,
                    "parentVariable": 20
                },
                {
                    "class_name": "TestVariable",
                    "id": 31,
                    "name": "userBankTable",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "{\"table\":\"users\",\"columns\":{\"id\":\"id\",\"login\":\"login\",\"password\":\"password\",\"enabled\":\"enabled\"}}",
                    "test": 6,
                    "parentVariable": 21
                },
                {
                    "class_name": "TestVariable",
                    "id": 32,
                    "name": "userBankEncryption",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "plain",
                    "test": 6,
                    "parentVariable": 22
                },
                {
                    "class_name": "TestVariable",
                    "id": 404,
                    "name": "resultCode",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 403
                }
            ],
            "sourceWizard": 3,
            "sourceWizardName": "authorizeUser",
            "sourceWizardTest": 5,
            "sourceWizardTestName": "_authorizeUser",
            "updatedOn": "2019-02-13 12:19:05",
            "updatedBy": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "_concerto_core",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "hash": "31425565808a20c1c6c606dc700076d6edbc01d2"
        }
    ]
}